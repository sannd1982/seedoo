<?xml version="1.0" ?>
<!-- This file is part of Seedoo.  The COPYRIGHT file at the top level of
this module contains the full copyright notices and license terms. -->

<openerp>
    <data>

        <!-- Workflow definition -->

        <record model="workflow" id="wkf_protocollo">
            <field name="name">wkf.protocollo.protocollo</field>
            <field name="osv">protocollo.protocollo</field>
            <field name="on_create">True</field>
        </record>

        <record model="workflow.activity" id="act_draft">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="flow_start">True</field>
            <field name="name">draft</field>
            <field name="action">write({'state':'draft'})</field>
            <field name="kind">function</field>
        </record>

        <record model="workflow.activity" id="act_registered">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">registered</field>
            <field name="kind">function</field>
            <field name="action">check_journal()
                action_create_attachment()
                action_create_partners()
                action_register()
                write({'state':'registered'})
            </field>
        </record>

        <!-- In Protocol -->

        <record model="workflow.activity" id="act_notified">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">notified</field>
            <field name="kind">function</field>
            <field name="action">action_notify()
                write({'state':'notified'})
            </field>
            <field name="kind">stopall</field>
        </record>

        <!-- Out Protocol -->

        <record model="workflow.activity" id="act_sent">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">sent</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'sent'})</field>
            <field name="kind">stopall</field>
        </record>

        <!-- Pec Protocol -->

        <record model="workflow.activity" id="act_waiting">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">waiting</field>
            <field name="kind">function</field>
            <field name="action">action_pec_send()
                write({'state':'waiting'})
            </field>
        </record>

        <record model="workflow.activity" id="act_error">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">error</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'error'})</field>
        </record>

        <record model="workflow.activity" id="act_canceled">
            <field name="wkf_id" ref="wkf_protocollo"/>
            <field name="name">canceled</field>
            <field name="kind">function</field>
            <field name="action">action_notify_cancel()
                write({'state':'canceled'})
            </field>
            <field name="kind">stopall</field>
        </record>

        <!-- This Action Is created only for import purpose -->
        <record model="workflow.transition" id="t10">
            <field name="act_from" ref="act_draft"/>
            <field name="act_to" ref="act_registered"/>
            <field name="signal">register</field>
        </record>

        <record model="workflow.transition" id="t20">
            <field name="act_from" ref="act_registered"/>
            <field name="act_to" ref="act_sent"/>
            <field name="signal">sent</field>
        </record>

        <record model="workflow.transition" id="t25">
            <field name="act_from" ref="act_registered"/>
            <field name="act_to" ref="act_waiting"/>
            <field name="signal">sent_pec</field>
        </record>

        <record model="workflow.transition" id="t30">
            <field name="act_from" ref="act_registered"/>
            <field name="act_to" ref="act_notified"/>
            <field name="condition">has_offices()</field>
        </record>

        <record model="workflow.transition" id="t40">
            <field name="act_from" ref="act_registered"/>
            <field name="act_to" ref="act_canceled"/>
            <field name="signal">cancel</field>
        </record>

        <record model="workflow.transition" id="t50">
            <field name="act_from" ref="act_notified"/>
            <field name="act_to" ref="act_canceled"/>
            <field name="signal">cancel</field>
        </record>

        <record model="workflow.transition" id="t60">
            <field name="act_from" ref="act_sent"/>
            <field name="act_to" ref="act_canceled"/>
            <field name="signal">cancel</field>
        </record>

        <record model="workflow.transition" id="t70">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_sent"/>
            <field name="trigger_model">mail.message</field>
            <field name="trigger_expr_id">mail_message_id_pec_get()</field>
            <field name="condition">test_mail_message()</field>
        </record>

        <record model="workflow.transition" id="t75">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_waiting"/>
            <field name="signal">resend</field>
        </record>

        <record model="workflow.transition" id="t80">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_error"/>
            <field name="trigger_model">mail.message</field>
            <field name="trigger_expr_id">mail_message_id_pec_get()</field>
            <field name="condition">test_error_mail_message()</field>
        </record>

        <record model="workflow.transition" id="t85">
            <field name="act_from" ref="act_error"/>
            <field name="act_to" ref="act_waiting"/>
            <field name="signal">resend</field>
        </record>

        <record model="workflow.transition" id="t87">
            <field name="act_from" ref="act_waiting"/>
            <field name="act_to" ref="act_canceled"/>
            <field name="signal">cancel</field>
        </record>

        <record model="workflow.transition" id="t90">
            <field name="act_from" ref="act_error"/>
            <field name="act_to" ref="act_canceled"/>
            <field name="signal">cancel</field>
        </record>

    </data>
</openerp>
